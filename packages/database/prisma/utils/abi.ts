export const DNOW_abiV1_0_0 = [
  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },
  { inputs: [{ internalType: 'address', name: 'target', type: 'address' }], name: 'AddressEmptyCode', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'implementation', type: 'address' }],
    name: 'ERC1967InvalidImplementation',
    type: 'error',
  },
  { inputs: [], name: 'ERC1967NonPayable', type: 'error' },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'allowance', type: 'uint256' },
      { internalType: 'uint256', name: 'needed', type: 'uint256' },
    ],
    name: 'ERC20InsufficientAllowance',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'address', name: 'sender', type: 'address' },
      { internalType: 'uint256', name: 'balance', type: 'uint256' },
      { internalType: 'uint256', name: 'needed', type: 'uint256' },
    ],
    name: 'ERC20InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'approver', type: 'address' }],
    name: 'ERC20InvalidApprover',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'receiver', type: 'address' }],
    name: 'ERC20InvalidReceiver',
    type: 'error',
  },
  { inputs: [{ internalType: 'address', name: 'sender', type: 'address' }], name: 'ERC20InvalidSender', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'spender', type: 'address' }],
    name: 'ERC20InvalidSpender',
    type: 'error',
  },
  { inputs: [], name: 'FailedInnerCall', type: 'error' },
  { inputs: [], name: 'InvalidInitialization', type: 'error' },
  { inputs: [], name: 'NotInitializing', type: 'error' },
  { inputs: [{ internalType: 'address', name: 'owner', type: 'address' }], name: 'OwnableInvalidOwner', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  { inputs: [], name: 'UUPSUnauthorizedCallContext', type: 'error' },
  {
    inputs: [{ internalType: 'bytes32', name: 'slot', type: 'bytes32' }],
    name: 'UUPSUnsupportedProxiableUUID',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'spender', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint64', name: 'version', type: 'uint64' }],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'from', type: 'address' },
      { indexed: true, internalType: 'address', name: 'to', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'implementation', type: 'address' }],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'UPGRADE_INTERFACE_VERSION',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'acceptOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'address', name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'spender', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'initialize', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'view', type: 'function' },
  {
    inputs: [],
    name: 'symbol',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'from', type: 'address' },
      { internalType: 'address', name: 'to', type: 'address' },
      { internalType: 'uint256', name: 'value', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'newImplementation', type: 'address' },
      { internalType: 'bytes', name: 'data', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
]

export const abiV1_0_0 = [
  {
    inputs: [{ internalType: 'address', name: 'backend_', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'AdminReceived',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'AdminWithdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'user', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
    ],
    name: 'CancelParticipation',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'ChallengeCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'ChallengeCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address[]', name: 'winners', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'winnersProfit', type: 'uint256[]' },
      { indexed: false, internalType: 'address[]', name: 'losers', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'losersLoss', type: 'uint256[]' },
    ],
    name: 'ChallengeFundsMoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'ChallengeJoined',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint8', name: 'finalOutcome', type: 'uint8' },
    ],
    name: 'ChallengeResolved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'UserWithdrawn',
    type: 'event',
  },
  {
    inputs: [{ internalType: 'bool', name: 'value_', type: 'bool' }],
    name: 'allowBetting',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { internalType: 'address[]', name: 'priceFeeds', type: 'address[]' },
      { internalType: 'uint256[]', name: 'minBetAmounts', type: 'uint256[]' },
    ],
    name: 'allowTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'applyMembershipValues',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'awaitingTimeForPublicCancel',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'backend',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bettingAllowed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint8', name: 'cancelType', type: 'uint8' },
    ],
    name: 'cancelChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'user', type: 'address' },
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
    ],
    name: 'cancelParticipation',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'challengeExists',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'backend_', type: 'address' }],
    name: 'changeBackend',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint256', name: 'startTime', type: 'uint256' },
      { internalType: 'uint256', name: 'endTime', type: 'uint256' },
    ],
    name: 'changeChallengeTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'value_', type: 'uint256' }],
    name: 'changeMinUSDBettingAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'decision', type: 'uint8' },
      { internalType: 'enum IP2PSports.ChallengeType', name: 'challengeType', type: 'uint8' },
      { internalType: 'uint256', name: 'startTime', type: 'uint256' },
      { internalType: 'uint256', name: 'endTime', type: 'uint256' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'createChallenge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
      { internalType: 'address', name: '_token', type: 'address' },
    ],
    name: 'debitInSC',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultOracleDecimals',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'getAdminShareRules',
    outputs: [
      { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'percentages', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllowedTokens',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'getChallengeDetails',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'token', type: 'address' },
          { internalType: 'address[]', name: 'usersFor', type: 'address[]' },
          { internalType: 'address[]', name: 'usersAgainst', type: 'address[]' },
          { internalType: 'uint256', name: 'amountFor', type: 'uint256' },
          { internalType: 'uint256', name: 'amountAgainst', type: 'uint256' },
          { internalType: 'enum IP2PSports.ChallengeStatus', name: 'status', type: 'uint8' },
          { internalType: 'enum IP2PSports.ChallengeType', name: 'challengeType', type: 'uint8' },
          { internalType: 'uint256', name: 'startTime', type: 'uint256' },
          { internalType: 'uint256', name: 'endTime', type: 'uint256' },
        ],
        internalType: 'struct IP2PSports.Challenge',
        name: 'challengeDetails',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address', name: 'user', type: 'address' },
    ],
    name: 'getUserBet',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'uint8', name: 'decision', type: 'uint8' },
          { internalType: 'uint256', name: 'adminShare', type: 'uint256' },
        ],
        internalType: 'struct IP2PSports.UserBet',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'user', type: 'address' }],
    name: 'getUserWithdrawables',
    outputs: [
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'increaseBetAmount',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'decision', type: 'uint8' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'joinChallenge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestChallengeId',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAdminSharePercentage',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengersEachSide',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengersForPickem',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengesToResolve',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxWinnersGroupChallenge',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minUSDBetAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'challengeIds', type: 'uint256[]' },
      { internalType: 'uint8[]', name: 'finalOutcomes', type: 'uint8[]' },
    ],
    name: 'resolveChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address[]', name: 'winners', type: 'address[]' },
      { internalType: 'uint256[]', name: 'profits', type: 'uint256[]' },
    ],
    name: 'resolveGroupChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address[]', name: 'tokens', type: 'address[]' }],
    name: 'restrictTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'percentages', type: 'uint256[]' },
      { internalType: 'address', name: 'token', type: 'address' },
    ],
    name: 'setAdminShareRules',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bool', name: 'value_', type: 'bool' }],
    name: 'updateApplyMembershipValues',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_maxChallengersEachSide', type: 'uint256' },
      { internalType: 'uint256', name: '_maxChallengersForPickem', type: 'uint256' },
    ],
    name: 'updateMaxChallengers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '_root', type: 'bytes32' }],
    name: 'updateRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
]

export const abiV1_0_1 = [
  {
    inputs: [{ internalType: 'address', name: 'backend_', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'AdminReceived',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
          { internalType: 'uint256[]', name: 'percentages', type: 'uint256[]' },
        ],
        indexed: false,
        internalType: 'struct IP2PSports.AdminShareRule',
        name: 'adminShareRules',
        type: 'tuple',
      },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'AdminShareRulesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'AdminWithdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'backend', type: 'address' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'BackendChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'bool', name: 'value', type: 'bool' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'BettingAllowed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'user', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
    ],
    name: 'CancelParticipation',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'ChallengeCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'ChallengeCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address[]', name: 'winners', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'winnersProfit', type: 'uint256[]' },
      { indexed: false, internalType: 'address[]', name: 'losers', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'losersLoss', type: 'uint256[]' },
      { indexed: false, internalType: 'enum IP2PSports.MethodType', name: 'mothodType', type: 'uint8' },
    ],
    name: 'ChallengeFundsMoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'ChallengeJoined',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint8', name: 'finalOutcome', type: 'uint8' },
    ],
    name: 'ChallengeResolved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'startTime', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'endTime', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'ChallengeTimeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'DebitedInSC',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'maxChallengersEachSide', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'maxChallengersForPickem', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MaxChallengersUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'bool', name: 'value', type: 'bool' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MembershipApplied',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'bytes32', name: 'root', type: 'bytes32' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MerkleRootUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MinUSDBettingAmountUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { indexed: false, internalType: 'address[]', name: 'priceFeeds', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'minBetAmounts', type: 'uint256[]' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'TokenAllowed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'TokenRestricted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'UserWithdrawn',
    type: 'event',
  },
  { inputs: [], name: 'acceptOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'bool', name: 'value_', type: 'bool' }],
    name: 'allowBetting',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { internalType: 'address[]', name: 'priceFeeds', type: 'address[]' },
      { internalType: 'uint256[]', name: 'minBetAmounts', type: 'uint256[]' },
    ],
    name: 'allowTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'applyMembershipValues',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'awaitingTimeForPublicCancel',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'backend',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bettingAllowed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint8', name: 'cancelType', type: 'uint8' },
    ],
    name: 'cancelChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'user', type: 'address' },
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint8', name: 'cancelType', type: 'uint8' },
    ],
    name: 'cancelParticipation',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'challengeExists',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'backend_', type: 'address' }],
    name: 'changeBackend',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'value_', type: 'uint256' }],
    name: 'changeMinUSDBettingAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'decision', type: 'uint8' },
      { internalType: 'enum IP2PSports.ChallengeType', name: 'challengeType', type: 'uint8' },
      { internalType: 'uint256', name: 'startTime', type: 'uint256' },
      { internalType: 'uint256', name: 'endTime', type: 'uint256' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'createChallenge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
      { internalType: 'address', name: '_token', type: 'address' },
    ],
    name: 'debitInSC',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultOracleDecimals',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'getAdminShareRules',
    outputs: [
      { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'percentages', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllowedTokens',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'getChallengeDetails',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'token', type: 'address' },
          { internalType: 'address[]', name: 'usersFor', type: 'address[]' },
          { internalType: 'address[]', name: 'usersAgainst', type: 'address[]' },
          { internalType: 'uint256', name: 'amountFor', type: 'uint256' },
          { internalType: 'uint256', name: 'amountAgainst', type: 'uint256' },
          { internalType: 'enum IP2PSports.ChallengeStatus', name: 'status', type: 'uint8' },
          { internalType: 'enum IP2PSports.ChallengeType', name: 'challengeType', type: 'uint8' },
          { internalType: 'uint256', name: 'startTime', type: 'uint256' },
          { internalType: 'uint256', name: 'endTime', type: 'uint256' },
        ],
        internalType: 'struct IP2PSports.Challenge',
        name: 'challengeDetails',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address', name: 'user', type: 'address' },
    ],
    name: 'getUserBet',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'uint8', name: 'decision', type: 'uint8' },
          { internalType: 'uint256', name: 'adminShare', type: 'uint256' },
          { internalType: 'address', name: 'referrer', type: 'address' },
          { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
        ],
        internalType: 'struct IP2PSports.UserBet',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'user', type: 'address' }],
    name: 'getUserWithdrawables',
    outputs: [
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'increaseBetAmount',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'decision', type: 'uint8' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'joinChallenge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestChallengeId',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAdminSharePercentage',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAdminShareThresholds',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengersEachSide',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengersForPickem',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengesToResolve',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxForMinUSDBetAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxWinnersGroupChallenge',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minUSDBetAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'priceFeedErrorMargin',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'view', type: 'function' },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'challengeIds', type: 'uint256[]' },
      { internalType: 'uint8[]', name: 'finalOutcomes', type: 'uint8[]' },
    ],
    name: 'resolveChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address[]', name: 'winners', type: 'address[]' },
      { internalType: 'uint256[]', name: 'profits', type: 'uint256[]' },
    ],
    name: 'resolveGroupChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address[]', name: 'tokens', type: 'address[]' }],
    name: 'restrictTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'percentages', type: 'uint256[]' },
      { internalType: 'address', name: 'token', type: 'address' },
    ],
    name: 'setAdminShareRules',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bool', name: 'value_', type: 'bool' }],
    name: 'updateApplyMembershipValues',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_maxChallengersEachSide', type: 'uint256' },
      { internalType: 'uint256', name: '_maxChallengersForPickem', type: 'uint256' },
    ],
    name: 'updateMaxChallengers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '_root', type: 'bytes32' }],
    name: 'updateRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
]

export const abiV1_0_2 = [
  {
    type: 'constructor',
    inputs: [
      {
        name: 'backend_',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    name: 'AdminReceived',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    name: 'AdminShareCalculated',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    name: 'AdminShareRulesUpdated',
    type: 'event',
    inputs: [
      {
        name: 'adminShareRules',
        type: 'tuple',
        indexed: false,
        components: [
          {
            name: 'thresholds',
            type: 'uint256[]',
            internalType: 'uint256[]',
          },
          {
            name: 'sharesInUSD',
            type: 'uint256[]',
            internalType: 'uint256[]',
          },
          {
            name: 'isSTMX',
            type: 'bool',
            internalType: 'bool',
          },
        ],
        internalType: 'struct IP2PSports.AdminShareRule',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'AdminWithdrawn',
    type: 'event',
    inputs: [
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    name: 'BackendChanged',
    type: 'event',
    inputs: [
      {
        name: 'backend',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'BetAmountIncreased',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'increasedAmount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'newTotalAmount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'BettingAllowed',
    type: 'event',
    inputs: [
      {
        name: 'value',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'CancelParticipation',
    type: 'event',
    inputs: [
      {
        name: 'user',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    name: 'ChallengeCanceled',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    name: 'ChallengeCreated',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'inputStakedQty',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    name: 'ChallengeFundsMoved',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'winners',
        type: 'address[]',
        indexed: false,
        internalType: 'address[]',
      },
      {
        name: 'winnersProfit',
        type: 'uint256[]',
        indexed: false,
        internalType: 'uint256[]',
      },
      {
        name: 'losers',
        type: 'address[]',
        indexed: false,
        internalType: 'address[]',
      },
      {
        name: 'losersLoss',
        type: 'uint256[]',
        indexed: false,
        internalType: 'uint256[]',
      },
      {
        name: 'mothodType',
        type: 'uint8',
        indexed: false,
        internalType: 'enum IP2PSports.MethodType',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'ChallengeJoined',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'inputStakedQty',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    name: 'ChallengeResolved',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'finalOutcome',
        type: 'uint8',
        indexed: false,
        internalType: 'uint8',
      },
    ],
    anonymous: false,
  },
  {
    name: 'DebitedInSC',
    type: 'event',
    inputs: [
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'MaxChallengersUpdated',
    type: 'event',
    inputs: [
      {
        name: 'maxChallengersEachSide',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'maxChallengersForPickem',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'MembershipApplied',
    type: 'event',
    inputs: [
      {
        name: 'value',
        type: 'bool',
        indexed: false,
        internalType: 'bool',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'MerkleRootUpdated',
    type: 'event',
    inputs: [
      {
        name: 'root',
        type: 'bytes32',
        indexed: false,
        internalType: 'bytes32',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'MinUSDBettingAmountUpdated',
    type: 'event',
    inputs: [
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'OwnershipTransferStarted',
    type: 'event',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'OwnershipTransferred',
    type: 'event',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'ReferralsEarned',
    type: 'event',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'referrers',
        type: 'address[]',
        indexed: false,
        internalType: 'address[]',
      },
      {
        name: 'referrelCommissions',
        type: 'uint256[]',
        indexed: false,
        internalType: 'uint256[]',
      },
    ],
    anonymous: false,
  },
  {
    name: 'TokenAllowed',
    type: 'event',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        indexed: false,
        internalType: 'address[]',
      },
      {
        name: 'priceFeeds',
        type: 'address[]',
        indexed: false,
        internalType: 'address[]',
      },
      {
        name: 'minBetAmounts',
        type: 'uint256[]',
        indexed: false,
        internalType: 'uint256[]',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'TokenRestricted',
    type: 'event',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        indexed: false,
        internalType: 'address[]',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'UserWithdrawn',
    type: 'event',
    inputs: [
      {
        name: 'token',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'by',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    name: 'acceptOwnership',
    type: 'function',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'allowBetting',
    type: 'function',
    inputs: [
      {
        name: 'value_',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'allowTokens',
    type: 'function',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        internalType: 'address[]',
      },
      {
        name: 'priceFeeds',
        type: 'address[]',
        internalType: 'address[]',
      },
      {
        name: 'minBetAmounts',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'applyMembershipValues',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'awaitingTimeForPublicCancel',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'backend',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'bettingAllowed',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'cancelChallenge',
    type: 'function',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'cancelType',
        type: 'uint8',
        internalType: 'uint8',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'cancelParticipation',
    type: 'function',
    inputs: [
      {
        name: 'user',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'cancelType',
        type: 'uint8',
        internalType: 'uint8',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'challengeExists',
    type: 'function',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'changeBackend',
    type: 'function',
    inputs: [
      {
        name: 'backend_',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'changeMinUSDBettingAmount',
    type: 'function',
    inputs: [
      {
        name: 'value_',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'createChallenge',
    type: 'function',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amountFromWallet',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'amountFromWithdrawables',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'decision',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'challengeType',
        type: 'uint8',
        internalType: 'enum IP2PSports.ChallengeType',
      },
      {
        name: 'startTime',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'endTime',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'membershipLevel',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'feePercentage',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'referrer',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'referralCommision',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'proof',
        type: 'bytes32[]',
        internalType: 'bytes32[]',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    name: 'debitInSC',
    type: 'function',
    inputs: [
      {
        name: '_amount',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '_token',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    name: 'defaultOracleDecimals',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'getAdminShareRules',
    type: 'function',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: 'thresholds',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
      {
        name: 'sharesInUSD',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
      {
        name: 'isSTMX',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'getAllowedTokens',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address[]',
        internalType: 'address[]',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'getChallengeDetails',
    type: 'function',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: 'challengeDetails',
        type: 'tuple',
        components: [
          {
            name: 'token',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'usersFor',
            type: 'address[]',
            internalType: 'address[]',
          },
          {
            name: 'usersAgainst',
            type: 'address[]',
            internalType: 'address[]',
          },
          {
            name: 'amountFor',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'amountAgainst',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'status',
            type: 'uint8',
            internalType: 'enum IP2PSports.ChallengeStatus',
          },
          {
            name: 'challengeType',
            type: 'uint8',
            internalType: 'enum IP2PSports.ChallengeType',
          },
          {
            name: 'startTime',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'endTime',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
        internalType: 'struct IP2PSports.Challenge',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'getUserBet',
    type: 'function',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'user',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple',
        components: [
          {
            name: 'amount',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'decision',
            type: 'uint8',
            internalType: 'uint8',
          },
          {
            name: 'adminShare',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'referrer',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'referralCommision',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
        internalType: 'struct IP2PSports.UserBet',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'getUserWithdrawables',
    type: 'function',
    inputs: [
      {
        name: 'user',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: 'tokens',
        type: 'address[]',
        internalType: 'address[]',
      },
      {
        name: 'amounts',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'increaseBetAmount',
    type: 'function',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'amountFromWallet',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'amountFromWithdrawables',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'membershipLevel',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'feePercentage',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'referrer',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'referralCommision',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'proof',
        type: 'bytes32[]',
        internalType: 'bytes32[]',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    name: 'joinChallenge',
    type: 'function',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'amountFromWallet',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'amountFromWithdrawables',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'decision',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'membershipLevel',
        type: 'uint8',
        internalType: 'uint8',
      },
      {
        name: 'feePercentage',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'referrer',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'referralCommision',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'proof',
        type: 'bytes32[]',
        internalType: 'bytes32[]',
      },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    name: 'latestChallengeId',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxAdminShareInUSD',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxAdminShareSTMX',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxAdminShareThresholds',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxChallengersEachSide',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxChallengersForPickem',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxChallengesToResolve',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxForMinUSDBetAmount',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'maxWinnersGroupChallenge',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'minUSDBetAmount',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'owner',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'pendingOwner',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'priceFeedErrorMargin',
    type: 'function',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    name: 'renounceOwnership',
    type: 'function',
    inputs: [],
    outputs: [],
    stateMutability: 'view',
  },
  {
    name: 'resolveChallenge',
    type: 'function',
    inputs: [
      {
        name: 'challengeIds',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
      {
        name: 'finalOutcomes',
        type: 'uint8[]',
        internalType: 'uint8[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'resolveGroupChallenge',
    type: 'function',
    inputs: [
      {
        name: 'challengeId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'winners',
        type: 'address[]',
        internalType: 'address[]',
      },
      {
        name: 'profits',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'restrictTokens',
    type: 'function',
    inputs: [
      {
        name: 'tokens',
        type: 'address[]',
        internalType: 'address[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'setAdminShareRules',
    type: 'function',
    inputs: [
      {
        name: 'thresholds',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
      {
        name: 'sharesInUSD',
        type: 'uint256[]',
        internalType: 'uint256[]',
      },
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'isSTMX',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'transferOwnership',
    type: 'function',
    inputs: [
      {
        name: 'newOwner',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'updateApplyMembershipValues',
    type: 'function',
    inputs: [
      {
        name: 'value_',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'updateMaxChallengers',
    type: 'function',
    inputs: [
      {
        name: '_maxChallengersEachSide',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: '_maxChallengersForPickem',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'updateRoot',
    type: 'function',
    inputs: [
      {
        name: '_root',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    name: 'withdraw',
    type: 'function',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'receive',
    stateMutability: 'payable',
  },
]

export const abiV1_0_3 = [
  {
    inputs: [{ internalType: 'address', name: 'backend_', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'AdminReceived',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'AdminShareCalculated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
          { internalType: 'uint256[]', name: 'sharesInUSD', type: 'uint256[]' },
          { internalType: 'bool', name: 'isSTMX', type: 'bool' },
        ],
        indexed: false,
        internalType: 'struct IP2PSports.AdminShareRule',
        name: 'adminShareRules',
        type: 'tuple',
      },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'AdminShareRulesUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'AdminWithdrawn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'backend', type: 'address' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'BackendChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'increasedAmount', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'newTotalAmount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
    ],
    name: 'BetAmountIncreased',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'bool', name: 'value', type: 'bool' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'BettingAllowed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'user', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
    ],
    name: 'CancelParticipation',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'ChallengeCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'inputStakedQty', type: 'uint256' },
    ],
    name: 'ChallengeCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address[]', name: 'winners', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'winnersProfit', type: 'uint256[]' },
      { indexed: false, internalType: 'address[]', name: 'losers', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'losersLoss', type: 'uint256[]' },
      { indexed: false, internalType: 'enum IP2PSports.MethodType', name: 'mothodType', type: 'uint8' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
    ],
    name: 'ChallengeFundsMoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'inputStakedQty', type: 'uint256' },
    ],
    name: 'ChallengeJoined',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'uint8', name: 'finalOutcome', type: 'uint8' },
    ],
    name: 'ChallengeResolved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'DebitedInSC',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'maxChallengersEachSide', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'maxChallengersForPickem', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MaxChallengersUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'bool', name: 'value', type: 'bool' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MembershipApplied',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'bytes32', name: 'root', type: 'bytes32' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MerkleRootUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'MinUSDBettingAmountUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferStarted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'address[]', name: 'referrers', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'referrelCommissions', type: 'uint256[]' },
    ],
    name: 'ReferralsEarned',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { indexed: false, internalType: 'address[]', name: 'priceFeeds', type: 'address[]' },
      { indexed: false, internalType: 'uint256[]', name: 'minBetAmounts', type: 'uint256[]' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'TokenAllowed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'TokenRestricted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: 'address', name: 'token', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount', type: 'uint256' },
      { indexed: false, internalType: 'address', name: 'by', type: 'address' },
    ],
    name: 'UserWithdrawn',
    type: 'event',
  },
  { inputs: [], name: 'acceptOwnership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [{ internalType: 'bool', name: 'value_', type: 'bool' }],
    name: 'allowBetting',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { internalType: 'address[]', name: 'priceFeeds', type: 'address[]' },
      { internalType: 'uint256[]', name: 'minBetAmounts', type: 'uint256[]' },
    ],
    name: 'allowTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'applyMembershipValues',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'awaitingTimeForPublicCancel',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'backend',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bettingAllowed',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint8', name: 'cancelType', type: 'uint8' },
    ],
    name: 'cancelChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'user', type: 'address' },
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint8', name: 'cancelType', type: 'uint8' },
    ],
    name: 'cancelParticipation',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'challengeExists',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'backend_', type: 'address' }],
    name: 'changeBackend',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'value_', type: 'uint256' }],
    name: 'changeMinUSDBettingAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'decision', type: 'uint8' },
      { internalType: 'enum IP2PSports.ChallengeType', name: 'challengeType', type: 'uint8' },
      { internalType: 'uint256', name: 'startTime', type: 'uint256' },
      { internalType: 'uint256', name: 'endTime', type: 'uint256' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'createChallenge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
      { internalType: 'address', name: '_token', type: 'address' },
    ],
    name: 'debitInSC',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultOracleDecimals',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'getAdminShareRules',
    outputs: [
      { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'sharesInUSD', type: 'uint256[]' },
      { internalType: 'bool', name: 'isSTMX', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllowedTokens',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'challengeId', type: 'uint256' }],
    name: 'getChallengeDetails',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'token', type: 'address' },
          { internalType: 'address[]', name: 'usersFor', type: 'address[]' },
          { internalType: 'address[]', name: 'usersAgainst', type: 'address[]' },
          { internalType: 'uint256', name: 'amountFor', type: 'uint256' },
          { internalType: 'uint256', name: 'amountAgainst', type: 'uint256' },
          { internalType: 'enum IP2PSports.ChallengeStatus', name: 'status', type: 'uint8' },
          { internalType: 'enum IP2PSports.ChallengeType', name: 'challengeType', type: 'uint8' },
          { internalType: 'uint256', name: 'startTime', type: 'uint256' },
          { internalType: 'uint256', name: 'endTime', type: 'uint256' },
        ],
        internalType: 'struct IP2PSports.Challenge',
        name: 'challengeDetails',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address', name: 'user', type: 'address' },
    ],
    name: 'getUserBet',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
          { internalType: 'uint8', name: 'decision', type: 'uint8' },
          { internalType: 'uint256', name: 'adminShare', type: 'uint256' },
          { internalType: 'address', name: 'referrer', type: 'address' },
          { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
        ],
        internalType: 'struct IP2PSports.UserBet',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'user', type: 'address' }],
    name: 'getUserWithdrawables',
    outputs: [
      { internalType: 'address[]', name: 'tokens', type: 'address[]' },
      { internalType: 'uint256[]', name: 'amounts', type: 'uint256[]' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'increaseBetAmount',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWallet', type: 'uint256' },
      { internalType: 'uint256', name: 'amountFromWithdrawables', type: 'uint256' },
      { internalType: 'uint8', name: 'decision', type: 'uint8' },
      { internalType: 'uint8', name: 'membershipLevel', type: 'uint8' },
      { internalType: 'uint256', name: 'feePercentage', type: 'uint256' },
      { internalType: 'address', name: 'referrer', type: 'address' },
      { internalType: 'uint256', name: 'referralCommision', type: 'uint256' },
      { internalType: 'bytes32[]', name: 'proof', type: 'bytes32[]' },
    ],
    name: 'joinChallenge',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestChallengeId',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAdminShareInUsd',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAdminShareSTMX',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxAdminShareThresholds',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengersEachSide',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengersForPickem',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxChallengesToResolve',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxForMinUSDBetAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxWinnersGroupChallenge',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minUSDBetAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pendingOwner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'priceFeedErrorMargin',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'renounceOwnership', outputs: [], stateMutability: 'view', type: 'function' },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'challengeIds', type: 'uint256[]' },
      { internalType: 'uint8[]', name: 'finalOutcomes', type: 'uint8[]' },
    ],
    name: 'resolveChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'challengeId', type: 'uint256' },
      { internalType: 'address[]', name: 'winners', type: 'address[]' },
      { internalType: 'uint256[]', name: 'profits', type: 'uint256[]' },
    ],
    name: 'resolveGroupChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address[]', name: 'tokens', type: 'address[]' }],
    name: 'restrictTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256[]', name: 'thresholds', type: 'uint256[]' },
      { internalType: 'uint256[]', name: 'sharesInUSD', type: 'uint256[]' },
      { internalType: 'address', name: 'token', type: 'address' },
      { internalType: 'bool', name: 'isSTMX', type: 'bool' },
    ],
    name: 'setAdminShareRules',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bool', name: 'value_', type: 'bool' }],
    name: 'updateApplyMembershipValues',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_maxChallengersEachSide', type: 'uint256' },
      { internalType: 'uint256', name: '_maxChallengersForPickem', type: 'uint256' },
    ],
    name: 'updateMaxChallengers',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: '_root', type: 'bytes32' }],
    name: 'updateRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'token', type: 'address' }],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
]
